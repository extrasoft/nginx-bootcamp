// run docker
docker run -d --name my-nginx -p 8080:80 nginx

// เข้าไปข้างใน docker
docker exec -it my-nginx bash

// เข้าไปหาไฟล์ config
cd etc/nginx

// เข้าไปอ่านไฟล์ nginx.conf
cat nginx.conf // /etc/nginx/nginx.conf

// เข้าไปหาไฟล์ html
cd /usr/share/nginx/html/

// หา OS ภายใน container
cat /etc/os-release

// ติดตั้ง command ใน docker เช่น nanmo, vim
apt-get update --อัพเดทคำสั่ง
apt-get install nano, vim

*** nano กับ vim ใช้สำหรับ แก้ไขไฟล์
//nano index.html 
    -- ถ้าจะ save กด ctrl+x => y


//vim index.html  
    -- ต้องเปลี่ยนโหมดเป็นแก้ไขก่อนด้วยการกดตัว i
    -- ต้องการออกจากการเขียนไฟล์ให้กด ESC แล้วพิมพ์ :wq (write+quite)

// run docker by mount
docker run -d --name my-nginx -p 8080:80 -v C:\Programming\nginx_bootcamp\demo:/usr/share/nginx/html/ nginx
หรือ
docker run -d --name my-nginx -p 8080:80 -v %cd%\demo:/usr/share/nginx/html/ nginx  

// หา path ปัจจุบัน
echo %cd% --สำหรับ windows
echo $(pwd) --สำหรับ mac


// restart container
docker restart my-nginx


// run docker6 by mount nginx
docker run -d --name my-nginx -p 8080:80 -v %cd%\demo:/usr/share/nginx/html/ -v %cd%\conf\nginx.conf:/etc/nginx/nginx.conf nginx

// เขียนทับ url ที่เข้ามา 
rewrite ^/user/team /hello/team;
*** ^ หมายถึงต้องขึ้นต้นด้วยแบบนี้เท่านั้น

root เป็นการกำหนด root path ของ nginx

index เป็นการค้นหาไฟล์ไปเรื่อยๆ

autoindex จะเป็นการเปิดให้เห็น index path บน browser

try_files คล้ายๆ index แต่จะมีข้อแตกต่างตัวสุดท้ายจะเป็นการ rewrite ในกรณีที่ไม่เจอไฟล์

access_log 
    จะเป็นการเก็บ log ทั้งหมดเมื่อมีการเรียกใช้งาน nginx server
    default path : logs/access.log
    วิธีใช้ docker logs -f my-nginx (-f ย่อมาจาก follow คือจะดูได้แบบ realtime)

worker process ตัวประมวลผลเมื่อมีการ request เข้ามาที่ server ของเรา

buffer เป็นส่วนหนึ่งของหน่วยความจำที่ใช้สำหรับพักข้อมูลเป็นการชั่วคราวในระหว่างทำการถ่ายทอดหรือส่งผ่านข้อมูล ไปยังปลายทาง เช่น CPU, Harddisk, Network

timeouts 
    เป็นการตั้งค่าเวลาในการติดต่อกับ server ถ้าเกินจะตัดและ response อะไรกลับไป
    สามารถตั้งเวลาได้ทั้ง request และ response

******** ติดตั้ง nginx+php *******
docker exec -it my-nginx bash

apt-get update              อัพเดท service
apt-get install php-fpm     ติดตั้ง service php-fpm
service --status-all        เช็ค service ที่ติดตั้ง
service php7.3-fpm start    start, stop, restart, status    
service php7.3-fpm status


docker run -d --name my-api -p 3000:3000 olanlab/json-server 